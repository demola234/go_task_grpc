syntax = "proto3";

package pb;

import "rpc_get_task.proto";
import "rpc_delete_task.proto";
import "rpc_delete_task.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/demola234/todogrpc/pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
      title: "TodoGrpc";
      version: "1.0";
      contact: {
        name: "TodoGrpc";
        url: "https://github.com/demola234/todogrpc";
        email: "kolawoleoluwasegun567@gmail.com";
      };
    };
    security_definitions: {
      security: {
        key: "bearer"
        value: {
          type: TYPE_API_KEY
          in: IN_HEADER
          name: "Authorization Bearer"
          description: "Authentication token, prefixed by Bearer: Bearer <token>"
        }
      }
    }
    security: {
      security_requirement: {
        key: "bearer"
  
      }
    };
  };

service TodoGrpc {
   
    rpc CreateTask(CreateTaskRequest) returns (CreateTaskResponse){
        option (google.api.http) = {
            post: "/api/v1/create_task"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "User this API to create a new task";
            summary: "Create a new task";
            tags: "Task";
            security: { } // Disable security key
          };
    }
    rpc GetTask(EmptyGetRequest) returns (GetAllTaskResponse){
        option (google.api.http) = {
            get: "/api/v1/get_task"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "User this API to get all task";
            summary: "Get all task";
            tags: "Task";
            security: { } // Disable security key
          };
    }
    rpc DeleteTask(DeleteTaskRequest) returns (EmptyTaskRequest){
        option (google.api.http) = {
            delete: "/api/v1/delete_task"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "User this API to delete a task";
            summary: "Delete a task";
            tags: "Task";
            security: { } // Disable security key
          };
    }
    rpc UpdateTask(UpdateTaskRequest) returns (UpdateTaskResponse){
        option (google.api.http) = {
            put: "/api/v1/update_task"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "User this API to update a task";
            summary: "Update a task";
            tags: "Task";
            security: { } // Disable security key
          };
    }
}